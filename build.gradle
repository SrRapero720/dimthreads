import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'java'
    id 'idea'
    id 'net.minecraftforge.gradle' version '6.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'com.modrinth.minotaur' version '2.+'
    id 'net.darkhax.curseforgegradle' version '1.1.+'
}

base {
    archivesName = modid
    version = "$modloader-mc$mcversion-v$modversion"
    targetCompatibility = JavaVersion.VERSION_21
    sourceCompatibility = JavaVersion.VERSION_21
}

minecraft {
    mappings channel: "${mappingsch}", version: "${mappings_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    copyIdeResources = true
    reobf = false
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'terminal.jline', 'true'
            arg "--nogui"
            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        client {
            taskName "${modid}-client"
        }
        server {
            taskName "${modid}-server"
        }
    }
}

mixin {
    config "${modid}.${mixin_file_suffix}"
    add sourceSets.main, "${modid}.${mixin_refmap_suffix}"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/maven" }
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.tterrag.com/" }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url "https://jitpack.io" }

    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        forRepositories(fg.repository) // Only add this if you're using ForgeGradle, otherwise remove this line
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcversion}-${fgversion}"
    annotationProcessor "net.fabricmc:sponge-mixin:0.12.5+mixin.0.8.5"
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.5"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.3.5")) {
        jarJar.ranged(it, "[0.3.5,)")
    }

    // Hack fix for now, force jopt-simple to be exactly 5.0.4 because Mojang ships that version, but some transitive dependencies request 6.0+
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${modid}",
                "Specification-Vendor": "${modauthor}",
                "Specification-Version": "${modversion}",
                "Implementation-Title": "${modname}",
                "Implementation-Version": "${modversion}",
                "Implementation-Vendor" : "${modauthor}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.${mixin_file_suffix}"
        ])
    }
    finalizedBy("jarJar")
}

jarJar.enable()
tasks.jarJar.archiveClassifier = ''

// Process target resources with mod info
tasks.processResources.outputs.upToDateWhen { false }
processResources {
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta', "${modid}.${mixin_file_suffix}".toString()]) {
        expand(rootProject.properties)
    }
}

task upload(type: GradleBuild) {
    enabled = System.getenv("MODRINTH_TOKEN") != null && System.getenv("CURSEFORGE_TOKEN") != null
    description 'Uploads new version to CurseForge and Modrinth'
    group = 'publishing'
    tasks = [ 'curseforge', 'modrinth' ]
}

task curseforge(type: TaskPublishCurseForge) {
    afterEvaluate {
        dependsOn("jarJar")
    }

    disableVersionDetection()
    apiToken = System.getenv("CURSEFORGE_TOKEN")

    def mainFile = upload(curseforgeid, jar)
    mainFile.displayName = getVersionBuildName()
    mainFile.addModLoader(modloader.toLowerCase().capitalize())
    mainFile.addGameVersion(mcversion, "server", "client")
    mainFile.addIncompatibility("dimensional-threading-reforged")
    mainFile.changelog = getChangelogText(false)
    mainFile.changelogType = "markdown"
    mainFile.releaseType = versiontype
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = modrinthid

    uploadFile = jar
    versionName = getVersionBuildName()
    versionNumber = version.toString()
    versionType = versiontype
    gameVersions = [ mcversion ]
    changelog = getChangelogText(true)
    loaders = [ "forge" ]
}

String getVersionBuildName() {
    return "$modname/${modloader.toLowerCase().capitalize()}/mc$mcversion/v$modversion"
}

String getChangelogText(boolean latest) {
    String result = ''
    for (String line: file('CHANGELOG.md').readLines('UTF-8')) {
        if (latest && line.isEmpty()) return result
        result += line + "\n"
    }
    return result
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}